--------------------------------------------------------------------------------------------------------------------------성적조회
create or replace procedure subSelectList( --성적조회 전 과목선택출력
    pseq vwStudent.번호%type
)
is
    vsub vwStudent.과정명%type;
    vcursor sys_refcursor;
    vrow vwsublist%rowtype;
begin
    select 과정명 into vsub from vwstudent where 번호 = pseq;
    open vcursor
    for
    select * from vwsublist where 과정이름 = vsub;
    dbms_output.put_line(vsub);
    loop
        fetch vcursor into vrow;
        exit when vcursor%notfound;
        dbms_output.put_line('과목명: ' || vrow.과목이름);
    end loop;
    
end subSelectList;
/
------------------------------------------------------------------------- 
create or replace procedure scoreList( --성적조회
    pseq vwStudent.번호%type,
    psub vwsublist.과목이름%type
)
is
    vsub vwStudent.과정명%type;    --입력받은 학생의 과정명
    vrow vwsublist%rowtype;
    vrow2 vwscore%rowtype;

begin
    select 과정명 into vsub from vwstudent where 번호 = pseq;
    select * into vrow from vwsublist where 과정이름 = vsub and 과목이름 = psub;
    select * into vrow2 from vwscore where 번호 = pseq and 과목이름 = psub;
    dbms_output.put_line(vsub);
    dbms_output.put_line('과목번호: ' || vrow.리스트번호);
    dbms_output.put_line('과목명: ' || vrow.과목이름);
    dbms_output.put_line('과목기간: ' || vrow.과목시작일 || ' ~ ' || vrow.과목종료일);
    dbms_output.put_line('교재: ' || vrow.교재);
    dbms_output.put_line('교사: ' || vrow.교사);
    dbms_output.put_line('출결 배점: ' || vrow.출결배점);
    dbms_output.put_line('필기 배점: ' || vrow.필기배점 || ' 시험일: ' || vrow.필기시험일);
    dbms_output.put_line('실기 배점: ' || vrow.실기배점 || ' 시험일: ' || vrow.실기시험일);
    dbms_output.put_line('출결점수: ' || vrow2.출결점수);
    dbms_output.put_line('필기점수: ' || vrow2.필기점수);
    dbms_output.put_line('실기점수: ' || vrow2.실기점수);
    
end scoreList;
/
--------------------------------------------------------------------------------------------------------------------------출결등록
create or replace procedure workIn( -- 출석등록
    pseq tblattendanceStatus.atsSeq%type
)
is
begin
    insert into tblattendanceStatus values ((SELECT nvl(max(atsSeq),0) + 1 from tblattendanceStatus), pseq, default, null);
end workIn;
/
------------------------------------------------------------------------- 

create or replace procedure workout( -- 퇴근등록
    pseq tblattendanceStatus.atsSeq%type
)
is
    pin number;
    pout number;
begin
    update tblattendanceStatus set
        stout = default 
            where studentseq = pseq;
    select to_char(stin, 'hh24'), to_char(stout, 'hh24') into pin, pout from tblattendanceStatus where studentseq = pseq;

    if pin < 9 and pout >= 18 then
        INSERT INTO tblAttendance 
            VALUES ((SELECT nvl(max(attendanceSeq),0) + 1 from tblAttendance),pseq,(select processSeq from tblstudent where studentseq = pseq),sysdate,'정상');
    elsif pin >= 9 and pout >= 18 then
        INSERT INTO tblAttendance 
            VALUES ((SELECT nvl(max(attendanceSeq),0) + 1 from tblAttendance),pseq,(select processSeq from tblstudent where studentseq = pseq),sysdate,'지각');
    else 
        INSERT INTO tblAttendance 
            VALUES ((SELECT nvl(max(attendanceSeq),0) + 1 from tblAttendance),pseq,(select processSeq from tblstudent where studentseq = pseq),sysdate,'조퇴');
    end if;
end workout;
/
-------------------------------------------------------------------

create or replace procedure workCheck(--출석 조회
    pinput varchar2,
    pstdate date,
    pendate date
)
is
    vcursor sys_refcursor; --커서 참조 변수
    vrow tblAttendance%rowtype;

begin
    open vcursor
    for
    select 
        *
    from tblAttendance 
        where AttendanceDate >= pstdate 
            and AttendanceDate < to_date((pendate || ' 23:59:59'), 'yy-mm-dd hh24:mi:ss')
            and studentseq = pinput;
    
    loop 
        fetch vcursor into vrow;
        exit when vcursor%notfound;
        dbms_output.put_line('=======================================');
        dbms_output.put_line(vrow.AttendanceDate || ' 상태: '|| vrow.AttendanceStatus);
        
    end loop;
    dbms_output.put_line('=======================================');


end workCheck;
/
